//* Licensed Materials - Property of IBM                                     *
//* com.ibm.zurich.idmx.3_x_x                                                *
//* (C) Copyright IBM Corp. 2015. All Rights Reserved.                       *
//* US Government Users Restricted Rights - Use, duplication or              *
//* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.        *
//*                                                                          *
//* The contents of this file are subject to the terms of either the         *
//* International License Agreement for Identity Mixer Version 1.2 or the    *
//* Apache License Version 2.0.                                              *
//*                                                                          *
//* The license terms can be found in the file LICENSE.txt that is provided  *
//* together with this software.                                             *
//*/**/***********************************************************************

package com.ibm.zurich.idmx.interfaces.zkModule;

import java.math.BigInteger;
import java.util.List;

import com.ibm.zurich.idmx.interfaces.state.CarryOverStateIssuer;

public interface ZkModuleVerifierCarryOver extends ZkModuleVerifier {

  /**
   * returns a list of all attributes that were revealed by the prover (null if unrevealed, or if
   * the attribute has to be chosen by the issuer). This method may be called only after the proof
   * verification has been completed.
   */
  public List</* Nullable */BigInteger> recoverAttributes();

  /**
   * returns an object that contains the commitments that were generated by the prover, as well as
   * a list of all encoded attributes. This method may be called only after the proof verification
   * has been completed. The return value must be understood by the concrete instantiation of
   * getZkModuleProverIssuance().
   */
  public CarryOverStateIssuer recoverState();
}
